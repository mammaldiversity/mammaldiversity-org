---
import Link from "../Link.astro";
import { cleanTaxonData } from "../../scripts/taxon";
import cntl from "cntl";
import MixedLink from "./MixedLink.astro";
import TaxonDataList from "./TaxonDataList.astro";
import MddText from "./MddText.astro";

interface TaxonDataProps {
  label: string;
  content: string;
  isUrl?: boolean;
  isItalic?: boolean;
  isSynonym?: boolean;
  isList?: boolean;
}

const { label, content, isUrl, isItalic, isList, isSynonym } =
  Astro.props as TaxonDataProps;

// Check if content is not URL and contain "|"
// If so, replace "|" with " Â· " (middle dot)
// It is easier to read. The space in between makes it
// recognizable for tailwind to apply line break
const textData = !isUrl && !isList ? cleanTaxonData(content) : content;

// We hide the component if the content is "NA" or empty
// To keep the UI clean
const isHidden =
  textData === "NA" || textData.trim().length === 0 ? "hidden" : "";

const synonymClasses = cntl`
  text-md
  mb-2
  ${isHidden}
`;

const taxonClasses = cntl`
  text-lg
  md:text-xl
  mb-4
  ${isHidden}
`;
---

<div class={isSynonym ? synonymClasses : taxonClasses}>
  <h3 class="font-semibold">{label}</h3>
  {
    isList ? (
      <TaxonDataList content={textData} isItalic={isItalic} />
    ) : isUrl && textData.startsWith("http") ? (
      // If contain "|", split the content and create multiple links
      textData.includes("|") ? (
        textData.split("|").map((link) => <Link url={link} label={link} />)
      ) : (
        <Link url={textData} />
      )
    ) : textData.includes("http") ? (
      <MixedLink text={textData} isItalic={isItalic} />
    ) : (
      <p class={isItalic ? "italic" : ""}>
        <MddText text={textData} />
      </p>
    )
  }
</div>
