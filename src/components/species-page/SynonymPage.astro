---
import {
  createAuthorityCitation,
  createSynonymName,
} from "../../scripts/taxon";
import PageDivider from "../PageDivider.astro";
import TaxonData from "./TaxonData.astro";
import cntl from "cntl";

interface SynonymsProps {
  originalNameCombination?: string;
  species: string;
  rootName: string;
  authoritySpeciesAuthor: string;
  authoritySpeciesYear: number;
  authorityParentheses: number;
  family: string;
  validityStatus?: string;
  nomenclaturalStatus?: string;
  type?: string;
  typeKind?: string;
  typeSpecimenLink?: string;
  authorityPage?: string;
  authorityPageLink?: string;
  authorityPublication?: string;
  nameUsages?: string;
}

const {
  originalNameCombination,
  species,
  rootName,
  authoritySpeciesAuthor,
  authoritySpeciesYear,
  authorityParentheses,
  family,
  validityStatus,
  nomenclaturalStatus,
  type,
  typeKind,
  typeSpecimenLink,
  authorityPage,
  authorityPageLink,
  authorityPublication,
  nameUsages,
} = Astro.props as SynonymsProps;

const synonymText = createSynonymName(
  rootName,
  species,
  originalNameCombination
);
const authorityCitation = createAuthorityCitation(
  authoritySpeciesAuthor,
  authoritySpeciesYear,
  authorityParentheses === 1
);

const dialogClasses = cntl`
  modal
  modal-bottom
  sm:modal-middle
`;

const headerClasses = cntl`
  w-fit
  rounded-full
  p-2
  mr-4
  border-2
  hover:bg-spectra-50
  dark:hover:bg-spectra-950
  border-spectra-700
  dark:border-spectra-300
`;

const buttonTextClasses = cntl`
  mx-2
  text-sm
  text-left
  text-spectra-700
  dark:text-spectra-300
`;

const synonymTitleClasses = cntl`
  text-xl
  md:text-2xl
  font-serif
  tracking-wide
  italic
`;
---

<button id="modal-btn">
  <div id="header" class={headerClasses}>
    <p class={buttonTextClasses}>
      <span class="italic tracking-wide">{synonymText}</span>
      {authorityCitation}
    </p>
  </div>
</button>

<dialog id="my_modal_5" class={dialogClasses}>
  <div class="modal-box">
    <div id="modal-header" class="text-center mb-2">
      <h1 class={synonymTitleClasses}>
        {synonymText}
      </h1>
      <h2 class="text-lg">
        {authorityCitation}
      </h2>
    </div>
    <PageDivider />
    <div id="modal-content" class="max-h-96 overflow-y-auto pt-2">
      <TaxonData label="Family" content={family} isSynonym />
      <TaxonData label="Root name" content={rootName} isSynonym isItalic />
      <TaxonData label="Validity status" content={validityStatus} isSynonym />
      <TaxonData
        label="Nomenclatural status"
        content={nomenclaturalStatus}
        isSynonym
      />
      <TaxonData label="Type" content={type} isSynonym />
      <TaxonData label="Type kind" content={typeKind} isSynonym />
      <TaxonData
        label="Type specimen URI"
        content={typeSpecimenLink}
        isUrl
        isSynonym
      />
      <TaxonData label="Authority page" content={authorityPage} isSynonym />
      <TaxonData
        label="Authority page URI"
        content={authorityPageLink}
        isUrl
        isSynonym
      />
      <TaxonData
        label="Authority publication"
        content={authorityPublication}
        isSynonym
      />
      <TaxonData label="Name usages" content={nameUsages} isSynonym isList />
    </div>
    <div class="modal-action">
      <form method="dialog">
        <!-- if there is a button in form, it will close the modal -->
        <button class="btn">Close</button>
      </form>
    </div>
  </div>
</dialog>

<script>
  const dialogs = Array.from(
    document.querySelectorAll("#my_modal_5")
  ) as HTMLDialogElement[];
  const modalBtn = document.querySelectorAll("#modal-btn");

  modalBtn.forEach((btn, index) => {
    btn.addEventListener("click", () => {
      const dialog = dialogs[index];
      if (dialog) {
        dialog.showModal();
      }
    });
  });
</script>
